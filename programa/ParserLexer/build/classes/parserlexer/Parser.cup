package parserlexer;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
     
    public void syntax_error(Symbol s){
        this.s = s;
    }   

    public Symbol getS(){
        return this.s;
    }
:};

/* TERMINALS */

/* ---------- General ---------- */
terminal                        Main, Identifier, Comment, NewLine, BlankSpace, EndFile, Error;

/* ---------- Literals ---------- */
terminal                        IntegerLiteral, FloatLiteral, BoolLiteral, CharacterLiteral, StringLiteral;

/* ---------- Types ---------- */
terminal                        Integer, Float, Bool, Char, String;

/* ---------- Arrays ---------- */
terminal                        BracketOpening, BracketClosure;

/* ---------- Operators ---------- */
// Assignment sign
terminal                        AssignmentSign;

// Parenthesis
terminal                        ParenthesisOpening, ParenthesisClosure;

// Binary Arithmetic Operators
terminal                        Sum, Subtraction, Division, Multiplication, Module, Power;

// Unary Arithmetic Operators
terminal                        Increment, Decrement, Negative;

// Relational Operators
terminal                        Less, LessEqual, Greater, GreaterEqual, Equal, NotEqual;

// Logical Operators
terminal                        Conjunction, Disjunction, Negation;

/* ---------- Blocks ---------- */
terminal                        BlockOpening, BlockClosure, EndSentence;                    

/* ---------- Control Structures ---------- */
terminal                        If, Else, While, For, Switch, Case, Default, Break, Return, Colon, Comma;

/* ---------- IO Operators ---------- */
terminal                        Print, Read;

/* ---------- NON TERMINALES ---------- */
//Este non terminal es obligatorio, es la raiz de todas las reglas de produccion 
non terminal program;

// Declaración del símbolo inicial
start with program;

// Definición del no terminal inicial
program ::= /* puede estar vacío o tener otras producciones */;